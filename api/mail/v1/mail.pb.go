// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: mail/v1/mail.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DelMailMessageByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *DelMailMessageByUserIDRequest) Reset() {
	*x = DelMailMessageByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMailMessageByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMailMessageByUserIDRequest) ProtoMessage() {}

func (x *DelMailMessageByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMailMessageByUserIDRequest.ProtoReflect.Descriptor instead.
func (*DelMailMessageByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{0}
}

func (x *DelMailMessageByUserIDRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type DelMailMessageByUserIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat    float64 `protobuf:"fixed64,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Code    float64 `protobuf:"fixed64,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    string  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DelMailMessageByUserIDReply) Reset() {
	*x = DelMailMessageByUserIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMailMessageByUserIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMailMessageByUserIDReply) ProtoMessage() {}

func (x *DelMailMessageByUserIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMailMessageByUserIDReply.ProtoReflect.Descriptor instead.
func (*DelMailMessageByUserIDReply) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{1}
}

func (x *DelMailMessageByUserIDReply) GetStat() float64 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *DelMailMessageByUserIDReply) GetCode() float64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelMailMessageByUserIDReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DelMailMessageByUserIDReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UpdateMailMessageByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Subject   string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body      string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	SenderId  uint32 `protobuf:"varint,4,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SentAt    string `protobuf:"bytes,5,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	CcList    string `protobuf:"bytes,6,opt,name=cc_list,json=ccList,proto3" json:"cc_list,omitempty"`
	BccList   string `protobuf:"bytes,7,opt,name=bcc_list,json=bccList,proto3" json:"bcc_list,omitempty"`
	IsDraft   bool   `protobuf:"varint,8,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	IsDeleted bool   `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
}

func (x *UpdateMailMessageByUserIDRequest) Reset() {
	*x = UpdateMailMessageByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMailMessageByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMailMessageByUserIDRequest) ProtoMessage() {}

func (x *UpdateMailMessageByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMailMessageByUserIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateMailMessageByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMailMessageByUserIDRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *UpdateMailMessageByUserIDRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *UpdateMailMessageByUserIDRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *UpdateMailMessageByUserIDRequest) GetSenderId() uint32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *UpdateMailMessageByUserIDRequest) GetSentAt() string {
	if x != nil {
		return x.SentAt
	}
	return ""
}

func (x *UpdateMailMessageByUserIDRequest) GetCcList() string {
	if x != nil {
		return x.CcList
	}
	return ""
}

func (x *UpdateMailMessageByUserIDRequest) GetBccList() string {
	if x != nil {
		return x.BccList
	}
	return ""
}

func (x *UpdateMailMessageByUserIDRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *UpdateMailMessageByUserIDRequest) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type UpdateMailMessageByUserIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat    float64 `protobuf:"fixed64,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Code    float64 `protobuf:"fixed64,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    string  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateMailMessageByUserIDReply) Reset() {
	*x = UpdateMailMessageByUserIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMailMessageByUserIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMailMessageByUserIDReply) ProtoMessage() {}

func (x *UpdateMailMessageByUserIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMailMessageByUserIDReply.ProtoReflect.Descriptor instead.
func (*UpdateMailMessageByUserIDReply) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMailMessageByUserIDReply) GetStat() float64 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *UpdateMailMessageByUserIDReply) GetCode() float64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateMailMessageByUserIDReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateMailMessageByUserIDReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AddMailMessageByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Subject   string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body      string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	SenderId  uint32 `protobuf:"varint,4,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SentAt    string `protobuf:"bytes,5,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	CcList    string `protobuf:"bytes,6,opt,name=cc_list,json=ccList,proto3" json:"cc_list,omitempty"`
	BccList   string `protobuf:"bytes,7,opt,name=bcc_list,json=bccList,proto3" json:"bcc_list,omitempty"`
	IsDraft   bool   `protobuf:"varint,8,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	IsDeleted bool   `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	Img       string `protobuf:"bytes,10,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *AddMailMessageByUserIDRequest) Reset() {
	*x = AddMailMessageByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMailMessageByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMailMessageByUserIDRequest) ProtoMessage() {}

func (x *AddMailMessageByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMailMessageByUserIDRequest.ProtoReflect.Descriptor instead.
func (*AddMailMessageByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{4}
}

func (x *AddMailMessageByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddMailMessageByUserIDRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *AddMailMessageByUserIDRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *AddMailMessageByUserIDRequest) GetSenderId() uint32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *AddMailMessageByUserIDRequest) GetSentAt() string {
	if x != nil {
		return x.SentAt
	}
	return ""
}

func (x *AddMailMessageByUserIDRequest) GetCcList() string {
	if x != nil {
		return x.CcList
	}
	return ""
}

func (x *AddMailMessageByUserIDRequest) GetBccList() string {
	if x != nil {
		return x.BccList
	}
	return ""
}

func (x *AddMailMessageByUserIDRequest) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *AddMailMessageByUserIDRequest) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *AddMailMessageByUserIDRequest) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type AddMailMessageByUserIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat    float64 `protobuf:"fixed64,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Code    float64 `protobuf:"fixed64,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    string  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddMailMessageByUserIDReply) Reset() {
	*x = AddMailMessageByUserIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMailMessageByUserIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMailMessageByUserIDReply) ProtoMessage() {}

func (x *AddMailMessageByUserIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMailMessageByUserIDReply.ProtoReflect.Descriptor instead.
func (*AddMailMessageByUserIDReply) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{5}
}

func (x *AddMailMessageByUserIDReply) GetStat() float64 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *AddMailMessageByUserIDReply) GetCode() float64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddMailMessageByUserIDReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddMailMessageByUserIDReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// The request message containing the user's name.
type ListMailMessageByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsDraft  string `protobuf:"bytes,2,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`    // 1：草稿，2：已发送
	IsDelete string `protobuf:"bytes,3,opt,name=is_delete,json=isDelete,proto3" json:"is_delete,omitempty"` //  1：已删除，2：未删除
	Folder   string `protobuf:"bytes,4,opt,name=folder,proto3" json:"folder,omitempty"`                     // 1：收件箱，2：发件箱，3：草稿，4：垃圾箱
}

func (x *ListMailMessageByUserIDRequest) Reset() {
	*x = ListMailMessageByUserIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMailMessageByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMailMessageByUserIDRequest) ProtoMessage() {}

func (x *ListMailMessageByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMailMessageByUserIDRequest.ProtoReflect.Descriptor instead.
func (*ListMailMessageByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{6}
}

func (x *ListMailMessageByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListMailMessageByUserIDRequest) GetIsDraft() string {
	if x != nil {
		return x.IsDraft
	}
	return ""
}

func (x *ListMailMessageByUserIDRequest) GetIsDelete() string {
	if x != nil {
		return x.IsDelete
	}
	return ""
}

func (x *ListMailMessageByUserIDRequest) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

// The response message containing the greetings
type ListMailMessageByUserIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat    float64                                     `protobuf:"fixed64,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Code    float64                                     `protobuf:"fixed64,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string                                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ListMailMessageByUserIDReply_MailMessage `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListMailMessageByUserIDReply) Reset() {
	*x = ListMailMessageByUserIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMailMessageByUserIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMailMessageByUserIDReply) ProtoMessage() {}

func (x *ListMailMessageByUserIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMailMessageByUserIDReply.ProtoReflect.Descriptor instead.
func (*ListMailMessageByUserIDReply) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{7}
}

func (x *ListMailMessageByUserIDReply) GetStat() float64 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *ListMailMessageByUserIDReply) GetCode() float64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListMailMessageByUserIDReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListMailMessageByUserIDReply) GetData() []*ListMailMessageByUserIDReply_MailMessage {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListMailMessageByUserIDReply_MailMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject   string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body      string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	SenderId  uint32 `protobuf:"varint,4,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SentAt    string `protobuf:"bytes,5,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	CcList    string `protobuf:"bytes,6,opt,name=cc_list,json=ccList,proto3" json:"cc_list,omitempty"`
	BccList   string `protobuf:"bytes,7,opt,name=bcc_list,json=bccList,proto3" json:"bcc_list,omitempty"`
	IsDraft   bool   `protobuf:"varint,8,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	IsDeleted bool   `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	Img       string `protobuf:"bytes,10,opt,name=img,proto3" json:"img,omitempty"`
	IsRead    bool   `protobuf:"varint,11,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
}

func (x *ListMailMessageByUserIDReply_MailMessage) Reset() {
	*x = ListMailMessageByUserIDReply_MailMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mail_v1_mail_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMailMessageByUserIDReply_MailMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMailMessageByUserIDReply_MailMessage) ProtoMessage() {}

func (x *ListMailMessageByUserIDReply_MailMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMailMessageByUserIDReply_MailMessage.ProtoReflect.Descriptor instead.
func (*ListMailMessageByUserIDReply_MailMessage) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetSenderId() uint32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetSentAt() string {
	if x != nil {
		return x.SentAt
	}
	return ""
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetCcList() string {
	if x != nil {
		return x.CcList
	}
	return ""
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetBccList() string {
	if x != nil {
		return x.BccList
	}
	return ""
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *ListMailMessageByUserIDReply_MailMessage) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

var File_mail_v1_mail_proto protoreflect.FileDescriptor

var file_mail_v1_mail_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x73,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x93, 0x02, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x63, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x63, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x76, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x9c, 0x02, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x63, 0x63,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x63, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67,
	0x22, 0x73, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x22, 0xc7, 0x03, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4d, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x9a,
	0x02, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74,
	0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x63, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x63, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x6d, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x32, 0x9b, 0x05, 0x0a, 0x0b,
	0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x2e, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x69,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x62, 0x69, 0x74, 0x2d, 0x6d, 0x61, 0x69, 0x6c,
	0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x9e, 0x01,
	0x0a, 0x16, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x74, 0x4d, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x62, 0x69, 0x74, 0x2d, 0x6d, 0x61,
	0x69, 0x6c, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x61, 0x64, 0x64, 0x4d, 0x61, 0x69, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0xaa,
	0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x62,
	0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x69, 0x74,
	0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01,
	0x2a, 0x22, 0x28, 0x2f, 0x62, 0x69, 0x74, 0x2d, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x6d, 0x61, 0x69,
	0x6c, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x9b, 0x01, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x62, 0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x27, 0x12, 0x25, 0x2f, 0x62, 0x69, 0x74, 0x2d, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x6d, 0x61,
	0x69, 0x6c, 0x2f, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x5d, 0x0a, 0x20, 0x64, 0x65, 0x76,
	0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x69, 0x74, 0x2d,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x42,
	0x69, 0x74, 0x4d, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a,
	0x27, 0x62, 0x69, 0x74, 0x2d, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x74, 0x2d, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mail_v1_mail_proto_rawDescOnce sync.Once
	file_mail_v1_mail_proto_rawDescData = file_mail_v1_mail_proto_rawDesc
)

func file_mail_v1_mail_proto_rawDescGZIP() []byte {
	file_mail_v1_mail_proto_rawDescOnce.Do(func() {
		file_mail_v1_mail_proto_rawDescData = protoimpl.X.CompressGZIP(file_mail_v1_mail_proto_rawDescData)
	})
	return file_mail_v1_mail_proto_rawDescData
}

var file_mail_v1_mail_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_mail_v1_mail_proto_goTypes = []interface{}{
	(*DelMailMessageByUserIDRequest)(nil),            // 0: bitMail.v1.DelMailMessageByUserIDRequest
	(*DelMailMessageByUserIDReply)(nil),              // 1: bitMail.v1.DelMailMessageByUserIDReply
	(*UpdateMailMessageByUserIDRequest)(nil),         // 2: bitMail.v1.UpdateMailMessageByUserIDRequest
	(*UpdateMailMessageByUserIDReply)(nil),           // 3: bitMail.v1.UpdateMailMessageByUserIDReply
	(*AddMailMessageByUserIDRequest)(nil),            // 4: bitMail.v1.AddMailMessageByUserIDRequest
	(*AddMailMessageByUserIDReply)(nil),              // 5: bitMail.v1.AddMailMessageByUserIDReply
	(*ListMailMessageByUserIDRequest)(nil),           // 6: bitMail.v1.ListMailMessageByUserIDRequest
	(*ListMailMessageByUserIDReply)(nil),             // 7: bitMail.v1.ListMailMessageByUserIDReply
	(*ListMailMessageByUserIDReply_MailMessage)(nil), // 8: bitMail.v1.ListMailMessageByUserIDReply.MailMessage
}
var file_mail_v1_mail_proto_depIdxs = []int32{
	8, // 0: bitMail.v1.ListMailMessageByUserIDReply.data:type_name -> bitMail.v1.ListMailMessageByUserIDReply.MailMessage
	6, // 1: bitMail.v1.MailMessage.ListMailMessageByUserID:input_type -> bitMail.v1.ListMailMessageByUserIDRequest
	4, // 2: bitMail.v1.MailMessage.AddMailMessageByUserID:input_type -> bitMail.v1.AddMailMessageByUserIDRequest
	2, // 3: bitMail.v1.MailMessage.UpdateMailMessageByUserID:input_type -> bitMail.v1.UpdateMailMessageByUserIDRequest
	0, // 4: bitMail.v1.MailMessage.DelMailMessageByUserID:input_type -> bitMail.v1.DelMailMessageByUserIDRequest
	7, // 5: bitMail.v1.MailMessage.ListMailMessageByUserID:output_type -> bitMail.v1.ListMailMessageByUserIDReply
	5, // 6: bitMail.v1.MailMessage.AddMailMessageByUserID:output_type -> bitMail.v1.AddMailMessageByUserIDReply
	3, // 7: bitMail.v1.MailMessage.UpdateMailMessageByUserID:output_type -> bitMail.v1.UpdateMailMessageByUserIDReply
	1, // 8: bitMail.v1.MailMessage.DelMailMessageByUserID:output_type -> bitMail.v1.DelMailMessageByUserIDReply
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mail_v1_mail_proto_init() }
func file_mail_v1_mail_proto_init() {
	if File_mail_v1_mail_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mail_v1_mail_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMailMessageByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMailMessageByUserIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMailMessageByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMailMessageByUserIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMailMessageByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMailMessageByUserIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMailMessageByUserIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMailMessageByUserIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mail_v1_mail_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMailMessageByUserIDReply_MailMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mail_v1_mail_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mail_v1_mail_proto_goTypes,
		DependencyIndexes: file_mail_v1_mail_proto_depIdxs,
		MessageInfos:      file_mail_v1_mail_proto_msgTypes,
	}.Build()
	File_mail_v1_mail_proto = out.File
	file_mail_v1_mail_proto_rawDesc = nil
	file_mail_v1_mail_proto_goTypes = nil
	file_mail_v1_mail_proto_depIdxs = nil
}
